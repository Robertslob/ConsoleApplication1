Testcase;Status;Tijd;CPU;Omschrijving
Single Threaded;Correct;0.09;100%;Werkt je programma goed met maar 1 thread?
Single Threaded;Correct;2.34;100%;En met een grotere testcase?
2 threads (Eigen Lock, 5 runs);Correct;1.18;200%;Opwarmen: 2 threads (gemiddelde 5 runs)
4 threads (Eigen Lock, 5 runs);Correct;0.62;399%;Opwarmen: 4 threads (gemiddelde 5 runs)
16 threads (Eigen Lock, 1 run);Correct;0.51;765%;Echt lekker op gang: 16 threads
7 threads (Eigen Lock, 3 runs);Correct;0.51;700%;Nu geen saaie 2-macht: 7 threads
Eerlijk delen;Correct;0.01;100%;10 getallen over 3 threads verdelen
Meer threads dan nummers;Correct;0.01;100%;10 getallen over 17 threads verdelen
Lijstmodus (Eigen Lock, 1 thread);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Lijstmodus (Eigen Lock, 2 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Lijstmodus (C#-Lock, 2 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Eerlijk delen;Correct;0.01;100%;10 getallen over 3 threads verdelen (lijstmodus)
Meer threads dan nummers;Correct;0.01;100%;10 getallen over 17 threads verdelen (lijstmodus)
Zoekmodus;Correct;0.01;100%;Voorbeeld uit opdracht (Eigen Lock)
Zoekmodus;Correct;0.01;100%;Voorbeeld uit opdracht (Eigen Lock)
Zoekmodus;Correct;0.01;100%;Strikzoekopdracht
Zoekmodus;Correct;0.01;100%;Terminatie
1 thread (Eigen Lock, 5 runs);Correct;2.35;100%;Baseline: 5 runs met 1 thread.
Versnellingstest (Eigen Lock);Correct;-;-;Is je programma sneller met meer threads?
2 threads (C#-Lock, 5 runs);Correct;1.19;199%;C#-Lock: 2 threads (gemiddelde 5 runs)
4 threads (C#-Lock, 5 runs);Correct;0.61;402%;C#-Lock: 4 threads (gemiddelde 5 runs)
1 thread (C#-Lock, 5 runs);Correct;2.37;100%;Baseline: 5 runs met 1 thread.
Versnellingstest (C#-Lock);Correct;-;-;Is je programma sneller met meer threads?
Zoekmodus;Correct;0.01;100%;Voorbeeld uit opdracht (C#-Lock)
Zoekmodus;Correct;0.68;391%;Groter zoekbereik
Zoekmodus: 2 threads;Correct;0.60;203%;Zoekmodus: 2 threads (gemiddelde 5 runs)
Zoekmodus: 4 threads;Correct;0.34;378%;Zoekmodus: 4 threads (gemiddelde 5 runs)
Zoekmodus: 1 thread;Correct;1.16;100%;Baseline: 5 runs met 1 thread.
Versnellingstest (Zoekmodus);Correct;-;-;Is je programma sneller met meer threads?
Lijstmodus (Eigen Lock, 8 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Lijstmodus (C#-Lock, 8 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt

------------------------------------

1;Single Threaded;Correct;0.09;100%;Werkt je programma goed met maar 1 thread?
Test 1 - Single Threaded
Werkt je programma goed met maar 1 thread?

Invoer:
0 139483 928234 11 1 0 0

Uitvoer:
71705

Verwachte uitvoer:
71705

Als het antwoord verkeerd is is er waarschijnlijk iets mis met je BSN-test.

------------------------------------

2;Single Threaded;Correct;2.34;100%;En met een grotere testcase?
Test 2 - Single Threaded
En met een grotere testcase?

Invoer:
0 2824374 25823728 24 1 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

Als het antwoord verkeerd is is er waarschijnlijk iets mis met je BSN-test.

------------------------------------

3;2 threads (Eigen Lock, 5 runs);Correct;1.18;200%;Opwarmen: 2 threads (gemiddelde 5 runs)
Test 3 - 2 threads (Eigen Lock, 5 runs)
Opwarmen: 2 threads (gemiddelde 5 runs)

Invoer:
0 2824374 25823728 24 2 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

4;4 threads (Eigen Lock, 5 runs);Correct;0.62;399%;Opwarmen: 4 threads (gemiddelde 5 runs)
Test 4 - 4 threads (Eigen Lock, 5 runs)
Opwarmen: 4 threads (gemiddelde 5 runs)

Invoer:
0 2824374 25823728 24 4 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

5;16 threads (Eigen Lock, 1 run);Correct;0.51;765%;Echt lekker op gang: 16 threads
Test 5 - 16 threads (Eigen Lock, 1 run)
Echt lekker op gang: 16 threads

Invoer:
0 2824374 25823728 24 16 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

6;7 threads (Eigen Lock, 3 runs);Correct;0.51;700%;Nu geen saaie 2-macht: 7 threads
Test 6 - 7 threads (Eigen Lock, 3 runs)
Nu geen saaie 2-macht: 7 threads

Invoer:
0 2824374 25823728 24 7 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

7;Eerlijk delen;Correct;0.01;100%;10 getallen over 3 threads verdelen
Test 7 - Eerlijk delen
10 getallen over 3 threads verdelen

Invoer:
0 0 10 1 3 0 0

Uitvoer:
10

Verwachte uitvoer:
10

Let op: bij deze test is de modulus 1. Het is niet de bedoeling dat je dit afvangt als speciaal geval, deze test dient juist om te zien of je verdeling geen gaten laat vallen.

------------------------------------

8;Meer threads dan nummers;Correct;0.01;100%;10 getallen over 17 threads verdelen
Test 8 - Meer threads dan nummers
10 getallen over 17 threads verdelen

Invoer:
0 0 10 1 17 0 0

Uitvoer:
10

Verwachte uitvoer:
10

Let op: bij deze test is de modulus 1. Het is niet de bedoeling dat je dit afvangt als speciaal geval, deze test dient juist om te zien of je verdeling geen gaten laat vallen.

------------------------------------

9;Lijstmodus (Eigen Lock, 1 thread);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Test 9 - Lijstmodus (Eigen Lock, 1 thread)
Dit is een test of de lijstmodus werkt

Invoer:
0 123456789 123457789 21 1 1 0

Uitvoer:
1 123456804
2 123456812
3 123456820
4 123456889
5 123456897
6 123456901
7 123456978
8 123456986
9 123456994
10 123457003
11 123457011
12 123457088
13 123457096
14 123457100
15 123457169
16 123457177
17 123457185
18 123457193
19 123457258
20 123457266
21 123457274
22 123457282
23 123457290
24 123457339
25 123457347
26 123457355
27 123457363
28 123457371
29 123457428
30 123457436
31 123457444
32 123457452
33 123457460
34 123457509
35 123457517
36 123457525
37 123457533
38 123457541
39 123457606
40 123457614
41 123457622
42 123457630
43 123457699
44 123457703
45 123457711
46 123457788

------------------------------------

10;Lijstmodus (Eigen Lock, 2 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Test 10 - Lijstmodus (Eigen Lock, 2 threads)
Dit is een test of de lijstmodus werkt

Invoer:
0 123456789 123457789 21 2 1 0

Uitvoer:
1 123456804
2 123457290
3 123456812
4 123456820
5 123457339
6 123457347
7 123457355
8 123456889
9 123457363
10 123456897
11 123457371
12 123456901
13 123457428
14 123457436
15 123456978
16 123457444
17 123456986
18 123457452
19 123456994
20 123457460
21 123457003
22 123457011
23 123457509
24 123457517
25 123457525
26 123457088
27 123457533
28 123457096
29 123457541
30 123457100
31 123457606
32 123457169
33 123457614
34 123457177
35 123457622
36 123457185
37 123457630
38 123457193
39 123457699
40 123457258
41 123457703
42 123457266
43 123457711
44 123457274
45 123457282
46 123457788

------------------------------------

11;Lijstmodus (C#-Lock, 2 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Test 11 - Lijstmodus (C#-Lock, 2 threads)
Dit is een test of de lijstmodus werkt

Invoer:
1 123456789 123457789 21 2 1 0

Uitvoer:
1 123456804
2 123456812
3 123456820
4 123456889
5 123456897
6 123456901
7 123456978
8 123456986
9 123456994
10 123457003
11 123457011
12 123457088
13 123457096
14 123457100
15 123457169
16 123457177
17 123457185
18 123457193
19 123457258
20 123457266
21 123457274
22 123457282
23 123457290
24 123457339
25 123457347
26 123457355
27 123457363
28 123457371
29 123457428
30 123457436
31 123457444
32 123457452
33 123457460
34 123457509
35 123457517
36 123457525
37 123457533
38 123457541
39 123457606
40 123457614
41 123457622
42 123457630
43 123457699
44 123457703
45 123457711
46 123457788

------------------------------------

12;Eerlijk delen;Correct;0.01;100%;10 getallen over 3 threads verdelen (lijstmodus)
Test 12 - Eerlijk delen
10 getallen over 3 threads verdelen (lijstmodus)

Invoer:
0 0 10 1 3 1 0

Uitvoer:
1 0
2 3
3 1
4 6
5 2
6 7
7 4
8 8
9 5
10 9

Let op: bij deze test is de modulus 1. Het is niet de bedoeling dat je dit afvangt als speciaal geval, deze test dient juist om te zien of je verdeling geen gaten laat vallen.

------------------------------------

13;Meer threads dan nummers;Correct;0.01;100%;10 getallen over 17 threads verdelen (lijstmodus)
Test 13 - Meer threads dan nummers
10 getallen over 17 threads verdelen (lijstmodus)

Invoer:
0 0 10 1 17 1 0

Uitvoer:
1 0
2 1
3 2
4 3
5 4
6 5
7 6
8 7
9 8
10 9

Let op: bij deze test is de modulus 1. Het is niet de bedoeling dat je dit afvangt als speciaal geval, deze test dient juist om te zien of je verdeling geen gaten laat vallen.

------------------------------------

14;Zoekmodus;Correct;0.01;100%;Voorbeeld uit opdracht (Eigen Lock)
Test 14 - Zoekmodus
Voorbeeld uit opdracht (Eigen Lock)

Invoer:
0 274856170 274856190 11 4 2 c736ca9048d0967a27ec3833832f7ffb571ebd2f

Uitvoer:
274856182

Verwachte uitvoer:
274856182

Deze test kijkt of de zoekmodus goed geimplementeerd is. Als het antwoord fout is check dan de SHA-hashing nog eens.

------------------------------------

15;Zoekmodus;Correct;0.01;100%;Voorbeeld uit opdracht (Eigen Lock)
Test 15 - Zoekmodus
Voorbeeld uit opdracht (Eigen Lock)

Invoer:
0 274856170 274856190 11 4 2 ba9cd915c8e359d9733edcfe9c61e5aca92afb

Uitvoer:
-1

Verwachte uitvoer:
-1

Deze test kijkt of de zoekmodus goed geimplementeerd is. Deze test geeft een niet-bestaande hash, het antwoord zou -1 moeten zijn.

------------------------------------

16;Zoekmodus;Correct;0.01;100%;Strikzoekopdracht
Test 16 - Zoekmodus
Strikzoekopdracht

Invoer:
0 274856170 274856190 12 4 2 c736ca9048d0967a27ec3833832f7ffb571ebd2f

Uitvoer:
-1

Verwachte uitvoer:
-1

Bij deze testcase is er wel een rekeningnummer met het gewenste getal, maar dit rekeningnummer voldoet niet aan de m-proef!

------------------------------------

17;Zoekmodus;Correct;0.01;100%;Terminatie
Test 17 - Zoekmodus
Terminatie

Invoer:
0 274856182 374856190 11 4 2 c736ca9048d0967a27ec3833832f7ffb571ebd2f

Uitvoer:
274856182

Verwachte uitvoer:
274856182

Deze test kijkt of de terminatiemodus goed werkt. Een TIMELIMIT hier betekent waarschijnlijk dat de terminatie bij het zoeken niet goed werkt. Dit kan ook een false positive zijn (we gaan er bij deze test van uit dat je de nummers van laag naar hoog bekijkt), als je zeker weet dat je terminatie goed werkt kun je deze test negeren.

------------------------------------

18;1 thread (Eigen Lock, 5 runs);Correct;2.35;100%;Baseline: 5 runs met 1 thread.
Test 18 - 1 thread (Eigen Lock, 5 runs)
Baseline: 5 runs met 1 thread.

Invoer:
0 2824374 25823728 24 1 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

19;Versnellingstest (Eigen Lock);Correct;-;-;Is je programma sneller met meer threads?
Test 19 - Versnellingstest (Eigen Lock)
Is je programma sneller met meer threads? Met deze test kijken we of je programma ook echt sneller gaat lopen als we meer threads gebruiken.

Versnelling 1 naar 2 threads: 199% (moet minstens 125% zijn)
Versnelling 2 naar 4 threads: 190% (moet minstens 110% zijn)

Deze test vergelijkt de snelheid van je programma op dezelfde invoer met een verschillend aantal cores. Dit werkt alleen correct als je computer genoeg 'echte' (niet virtuele) cores heeft. Als de versnelling niet hoog genoeg is, kan dit duiden op te agressieve locking of dat je programma niet parallel werkt. Let op dat het resultaat van deze test sterk afhangt van de gebruikte computer, deze test is dus alleen ter indicatie.

------------------------------------

20;2 threads (C#-Lock, 5 runs);Correct;1.19;199%;C#-Lock: 2 threads (gemiddelde 5 runs)
Test 20 - 2 threads (C#-Lock, 5 runs)
C#-Lock: 2 threads (gemiddelde 5 runs)

Invoer:
1 2824374 25823728 24 2 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

21;4 threads (C#-Lock, 5 runs);Correct;0.61;402%;C#-Lock: 4 threads (gemiddelde 5 runs)
Test 21 - 4 threads (C#-Lock, 5 runs)
C#-Lock: 4 threads (gemiddelde 5 runs)

Invoer:
1 2824374 25823728 24 4 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

22;1 thread (C#-Lock, 5 runs);Correct;2.37;100%;Baseline: 5 runs met 1 thread.
Test 22 - 1 thread (C#-Lock, 5 runs)
Baseline: 5 runs met 1 thread.

Invoer:
1 2824374 25823728 24 1 0 0

Uitvoer:
958317

Verwachte uitvoer:
958317

------------------------------------

23;Versnellingstest (C#-Lock);Correct;-;-;Is je programma sneller met meer threads?
Test 23 - Versnellingstest (C#-Lock)
Is je programma sneller met meer threads? Met deze test kijken we of je programma ook echt sneller gaat lopen als we meer threads gebruiken.

Versnelling 1 naar 2 threads: 199% (moet minstens 125% zijn)
Versnelling 2 naar 4 threads: 195% (moet minstens 110% zijn)

Deze test vergelijkt de snelheid van je programma op dezelfde invoer met een verschillend aantal cores. Dit werkt alleen correct als je computer genoeg 'echte' (niet virtuele) cores heeft. Als de versnelling niet hoog genoeg is, kan dit duiden op te agressieve locking of dat je programma niet parallel werkt. Let op dat het resultaat van deze test sterk afhangt van de gebruikte computer, deze test is dus alleen ter indicatie.

------------------------------------

24;Zoekmodus;Correct;0.01;100%;Voorbeeld uit opdracht (C#-Lock)
Test 24 - Zoekmodus
Voorbeeld uit opdracht (C#-Lock)

Invoer:
1 274856170 274856190 11 4 2 c736ca9048d0967a27ec3833832f7ffb571ebd2f

Uitvoer:
274856182

Verwachte uitvoer:
274856182

Deze test kijkt of de zoekmodus goed geimplementeerd is. Als het antwoord fout is check dan de SHA-hashing nog eens.

------------------------------------

25;Zoekmodus;Correct;0.68;391%;Groter zoekbereik
Test 25 - Zoekmodus
Groter zoekbereik

Invoer:
1 261756170 274896190 47 4 2 a8428d9c87323e977978a67ee48827ca154bd84b

Uitvoer:
274886190

Verwachte uitvoer:
274886190

Deze test kijkt of de zoekmodus goed geimplementeerd is. Als het antwoord fout is check dan de SHA-hashing nog eens.

------------------------------------

26;Zoekmodus: 2 threads;Correct;0.60;203%;Zoekmodus: 2 threads (gemiddelde 5 runs)
Test 26 - Zoekmodus: 2 threads
Zoekmodus: 2 threads (gemiddelde 5 runs)

Invoer:
1 261756170 262035744 1 2 2 356a192b7913b04c54574d18c28d46e6395428ab

Uitvoer:
-1

Verwachte uitvoer:
-1

------------------------------------

27;Zoekmodus: 4 threads;Correct;0.34;378%;Zoekmodus: 4 threads (gemiddelde 5 runs)
Test 27 - Zoekmodus: 4 threads
Zoekmodus: 4 threads (gemiddelde 5 runs)

Invoer:
1 261756170 262035744 1 4 2 356a192b7913b04c54574d18c28d46e6395428ab

Uitvoer:
-1

Verwachte uitvoer:
-1

------------------------------------

28;Zoekmodus: 1 thread;Correct;1.16;100%;Baseline: 5 runs met 1 thread.
Test 28 - Zoekmodus: 1 thread
Baseline: 5 runs met 1 thread.

Invoer:
1 261756170 262035744 1 1 2 356a192b7913b04c54574d18c28d46e6395428ab

Uitvoer:
-1

Verwachte uitvoer:
-1

------------------------------------

29;Versnellingstest (Zoekmodus);Correct;-;-;Is je programma sneller met meer threads?
Test 29 - Versnellingstest (Zoekmodus)
Is je programma sneller met meer threads? Met deze test kijken we of je programma ook echt sneller gaat lopen als we meer threads gebruiken.

Versnelling 1 naar 2 threads: 193% (moet minstens 125% zijn)
Versnelling 2 naar 4 threads: 176% (moet minstens 110% zijn)

Deze test vergelijkt de snelheid van je programma op dezelfde invoer met een verschillend aantal cores. Dit werkt alleen correct als je computer genoeg 'echte' (niet virtuele) cores heeft. Als de versnelling niet hoog genoeg is, kan dit duiden op te agressieve locking of dat je programma niet parallel werkt. Let op dat het resultaat van deze test sterk afhangt van de gebruikte computer, deze test is dus alleen ter indicatie.

------------------------------------

30;Lijstmodus (Eigen Lock, 8 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Test 30 - Lijstmodus (Eigen Lock, 8 threads)
Dit is een test of de lijstmodus werkt

Invoer:
0 123456789 123457789 21 8 1 0

Uitvoer:
1 123456804
2 123456978
3 123457088
4 123457169
5 123456812
6 123457290
7 123456820
8 123457096
9 123456986
10 123457177
11 123457339
12 123456889
13 123457347
14 123456897
15 123457355
16 123456901
17 123457363
18 123457185
19 123457100
20 123457371
21 123456994
22 123457193
23 123457003
24 123457011
25 123457258
26 123457266
27 123457274
28 123457282
29 123457428
30 123457436
31 123457444
32 123457452
33 123457460
34 123457509
35 123457517
36 123457525
37 123457533
38 123457541
39 123457606
40 123457614
41 123457622
42 123457630
43 123457699
44 123457703
45 123457711
46 123457788

------------------------------------

31;Lijstmodus (C#-Lock, 8 threads);Correct;0.01;100%;Dit is een test of de lijstmodus werkt
Test 31 - Lijstmodus (C#-Lock, 8 threads)
Dit is een test of de lijstmodus werkt

Invoer:
1 123456789 123457789 21 8 1 0

Uitvoer:
1 123456804
2 123457541
3 123456812
4 123456820
5 123457606
6 123457614
7 123457622
8 123456889
9 123457630
10 123456897
11 123456901
12 123457428
13 123457436
14 123457444
15 123457452
16 123457460
17 123457509
18 123457517
19 123457525
20 123457533
21 123457699
22 123457703
23 123457711
24 123457788
25 123456978
26 123456986
27 123456994
28 123457003
29 123457011
30 123457290
31 123457339
32 123457347
33 123457355
34 123457363
35 123457371
36 123457088
37 123457096
38 123457100
39 123457169
40 123457177
41 123457185
42 123457193
43 123457258
44 123457266
45 123457274
46 123457282

Microsoft Windows NT 6.2.9200.0 (x64)
.NET version: 4.0.30319.42000
4 physical core(s), 8 virtual core(s) (hyperthreading), 1 processor(s)